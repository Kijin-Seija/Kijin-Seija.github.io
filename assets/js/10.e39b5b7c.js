(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{196:function(t,e,o){"use strict";o.r(e);var a=o(0),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"权限管理"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#权限管理","aria-hidden":"true"}},[t._v("#")]),t._v(" 权限管理")]),t._v(" "),o("p",[t._v("在表格组件的"),o("code",[t._v("field")]),t._v("配置，以及表单组件和交互按钮组件的配置中，都有这样两项参数：")]),t._v(" "),o("p",[o("code",[t._v("authority_code")]),t._v(" 权限码，如果不配置默认公开权限")]),t._v(" "),o("p",[o("code",[t._v("show_condition")]),t._v(" 显示状态控制，如果不配置默认为true。")]),t._v(" "),o("p",[t._v("这两项配置无论在任何地方，最终都由权限控制系统处理。")]),t._v(" "),o("h2",{attrs:{id:"authority-code"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#authority-code","aria-hidden":"true"}},[t._v("#")]),t._v(" "),o("code",[t._v("authority_code")])]),t._v(" "),o("p",[t._v("要对接权限管理功能，我们首先需要在安装Catalyst的时候在全局配置一个权限接口方法"),o("code",[t._v("hasPermit")]),t._v("。")]),t._v(" "),o("p",[o("code",[t._v("hasPermit")]),t._v("接受一个参数"),o("code",[t._v("authorityCode")]),t._v("\b，该参数即为组件的权限码。开发者可以自己实现基于权限码的方法，以判断是否显示该组件")]),t._v(" "),o("h2",{attrs:{id:"show-conditions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#show-conditions","aria-hidden":"true"}},[t._v("#")]),t._v(" "),o("code",[t._v("show_conditions")])]),t._v(" "),o("p",[t._v("该参数扩展了权限功能，允许传入一段自定义的js函数字符串，该函数必须返回一个布尔值，以确定是否显示该组件。")]),t._v(" "),o("p",[t._v("一个组件必须 "),o("code",[t._v("hasPermit（authority_code)")]),t._v(" 和 "),o("code",[t._v("show_condition")]),t._v(" 均为true, 才会显示")])])}),[],!1,null,null,null);e.default=_.exports}}]);